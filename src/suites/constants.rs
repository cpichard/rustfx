// Generated automatically from the openfx 1.3 include files 

// unrecognized #define kOfxFlagInfiniteMax INT_MAX


// unrecognized #define kOfxFlagInfiniteMin INT_MIN
// unrecognized //#define kOfxOpenGLRenderSuite_ext		"OfxImageEffectOpenGLRenderSuite_ext"

pub const kOfxActionBeginInstanceChanged: OfxKeyword<'static> = OfxKeyword(b"OfxActionBeginInstanceChanged\0");
pub const kOfxActionBeginInstanceEdit: OfxKeyword<'static> = OfxKeyword(b"OfxActionBeginInstanceEdit\0");
pub const kOfxActionCreateInstance: OfxKeyword<'static> = OfxKeyword(b"OfxActionCreateInstance\0");
pub const kOfxActionDescribe: OfxKeyword<'static> = OfxKeyword(b"OfxActionDescribe\0");
pub const kOfxActionDestroyInstance: OfxKeyword<'static> = OfxKeyword(b"OfxActionDestroyInstance\0");
pub const kOfxActionEndInstanceChanged: OfxKeyword<'static> = OfxKeyword(b"OfxActionEndInstanceChanged\0");
pub const kOfxActionEndInstanceEdit: OfxKeyword<'static> = OfxKeyword(b"OfxActionEndInstanceEdit\0");
pub const kOfxActionInstanceChanged: OfxKeyword<'static> = OfxKeyword(b"OfxActionInstanceChanged\0");
pub const kOfxActionLoad: OfxKeyword<'static> = OfxKeyword(b"OfxActionLoad\0");
pub const kOfxActionOpenGLContextAttached: OfxKeyword<'static> = OfxKeyword(b"OfxActionOpenGLContextAttached\0");
pub const kOfxActionOpenGLContextDetached: OfxKeyword<'static> = OfxKeyword(b"kOfxActionOpenGLContextDetached\0");
pub const kOfxActionPurgeCaches: OfxKeyword<'static> = OfxKeyword(b"OfxActionPurgeCaches\0");
pub const kOfxActionSyncPrivateData: OfxKeyword<'static> = OfxKeyword(b"OfxActionSyncPrivateData\0");
pub const kOfxActionUnload: OfxKeyword<'static> = OfxKeyword(b"OfxActionUnload\0");
pub const kOfxBitDepthByte: OfxKeyword<'static> = OfxKeyword(b"OfxBitDepthByte\0");
pub const kOfxBitDepthFloat: OfxKeyword<'static> = OfxKeyword(b"OfxBitDepthFloat\0");
pub const kOfxBitDepthHalf: OfxKeyword<'static> = OfxKeyword(b"OfxBitDepthHalf\0");
pub const kOfxBitDepthNone: OfxKeyword<'static> = OfxKeyword(b"OfxBitDepthNone\0");
pub const kOfxBitDepthShort: OfxKeyword<'static> = OfxKeyword(b"OfxBitDepthShort\0");
pub const kOfxChangePluginEdited: OfxKeyword<'static> = OfxKeyword(b"OfxChangePluginEdited\0");
pub const kOfxChangeTime: OfxKeyword<'static> = OfxKeyword(b"OfxChangeTime\0");
pub const kOfxChangeUserEdited: OfxKeyword<'static> = OfxKeyword(b"OfxChangeUserEdited\0");
pub const kOfxDialogSuite: OfxKeyword<'static> = OfxKeyword(b"OfxDialogSuite\0");
pub const kOfxHostNativeOriginBottomLeft: OfxKeyword<'static> = OfxKeyword(b"kOfxImageEffectHostPropNativeOriginBottomLeft\0");
pub const kOfxHostNativeOriginCenter: OfxKeyword<'static> = OfxKeyword(b"kOfxImageEffectHostPropNativeOriginCenter\0");
pub const kOfxHostNativeOriginTopLeft: OfxKeyword<'static> = OfxKeyword(b"kOfxImageEffectHostPropNativeOriginTopLeft\0");
pub const kOfxImageClipPropConnected: OfxKeyword<'static> = OfxKeyword(b"OfxImageClipPropConnected\0");
pub const kOfxImageClipPropContinuousSamples: OfxKeyword<'static> = OfxKeyword(b"OfxImageClipPropContinuousSamples\0");
pub const kOfxImageClipPropFieldExtraction: OfxKeyword<'static> = OfxKeyword(b"OfxImageClipPropFieldExtraction\0");
pub const kOfxImageClipPropFieldOrder: OfxKeyword<'static> = OfxKeyword(b"OfxImageClipPropFieldOrder\0");
pub const kOfxImageClipPropIsMask: OfxKeyword<'static> = OfxKeyword(b"OfxImageClipPropIsMask\0");
pub const kOfxImageClipPropOptional: OfxKeyword<'static> = OfxKeyword(b"OfxImageClipPropOptional\0");
pub const kOfxImageClipPropUnmappedComponents: OfxKeyword<'static> = OfxKeyword(b"OfxImageClipPropUnmappedComponents\0");
pub const kOfxImageClipPropUnmappedPixelDepth: OfxKeyword<'static> = OfxKeyword(b"OfxImageClipPropUnmappedPixelDepth\0");
pub const kOfxImageComponentAlpha: OfxKeyword<'static> = OfxKeyword(b"OfxImageComponentAlpha\0");
pub const kOfxImageComponentNone: OfxKeyword<'static> = OfxKeyword(b"OfxImageComponentNone\0");
pub const kOfxImageComponentRGB: OfxKeyword<'static> = OfxKeyword(b"OfxImageComponentRGB\0");
pub const kOfxImageComponentRGBA: OfxKeyword<'static> = OfxKeyword(b"OfxImageComponentRGBA\0");
pub const kOfxImageComponentYUVA: OfxKeyword<'static> = OfxKeyword(b"OfxImageComponentYUVA\0");
pub const kOfxImageEffectActionBeginSequenceRender: OfxKeyword<'static> = OfxKeyword(b"OfxImageEffectActionBeginSequenceRender\0");
pub const kOfxImageEffectActionDescribeInContext: OfxKeyword<'static> = OfxKeyword(b"OfxImageEffectActionDescribeInContext\0");
pub const kOfxImageEffectActionEndSequenceRender: OfxKeyword<'static> = OfxKeyword(b"OfxImageEffectActionEndSequenceRender\0");
pub const kOfxImageEffectActionGetClipPreferences: OfxKeyword<'static> = OfxKeyword(b"OfxImageEffectActionGetClipPreferences\0");
pub const kOfxImageEffectActionGetFramesNeeded: OfxKeyword<'static> = OfxKeyword(b"OfxImageEffectActionGetFramesNeeded\0");
pub const kOfxImageEffectActionGetRegionOfDefinition: OfxKeyword<'static> = OfxKeyword(b"OfxImageEffectActionGetRegionOfDefinition\0");
pub const kOfxImageEffectActionGetRegionsOfInterest: OfxKeyword<'static> = OfxKeyword(b"OfxImageEffectActionGetRegionsOfInterest\0");
pub const kOfxImageEffectActionGetTimeDomain: OfxKeyword<'static> = OfxKeyword(b"OfxImageEffectActionGetTimeDomain\0");
pub const kOfxImageEffectActionIsIdentity: OfxKeyword<'static> = OfxKeyword(b"OfxImageEffectActionIsIdentity\0");
pub const kOfxImageEffectActionRender: OfxKeyword<'static> = OfxKeyword(b"OfxImageEffectActionRender\0");
pub const kOfxImageEffectContextFilter: OfxKeyword<'static> = OfxKeyword(b"OfxImageEffectContextFilter\0");
pub const kOfxImageEffectContextGeneral: OfxKeyword<'static> = OfxKeyword(b"OfxImageEffectContextGeneral\0");
pub const kOfxImageEffectContextGenerator: OfxKeyword<'static> = OfxKeyword(b"OfxImageEffectContextGenerator\0");
pub const kOfxImageEffectContextPaint: OfxKeyword<'static> = OfxKeyword(b"OfxImageEffectContextPaint\0");
pub const kOfxImageEffectContextRetimer: OfxKeyword<'static> = OfxKeyword(b"OfxImageEffectContextRetimer\0");
pub const kOfxImageEffectContextTransition: OfxKeyword<'static> = OfxKeyword(b"OfxImageEffectContextTransition\0");
pub const kOfxImageEffectFrameVarying: OfxKeyword<'static> = OfxKeyword(b"OfxImageEffectFrameVarying\0");
pub const kOfxImageEffectHostPropIsBackground: OfxKeyword<'static> = OfxKeyword(b"OfxImageEffectHostPropIsBackground\0");
pub const kOfxImageEffectHostPropNativeOrigin: OfxKeyword<'static> = OfxKeyword(b"OfxImageEffectHostPropNativeOrigin\0");
pub const kOfxImageEffectInstancePropEffectDuration: OfxKeyword<'static> = OfxKeyword(b"OfxImageEffectInstancePropEffectDuration\0");
pub const kOfxImageEffectInstancePropSequentialRender: OfxKeyword<'static> = OfxKeyword(b"OfxImageEffectInstancePropSequentialRender\0");
pub const kOfxImageEffectOutputClipName: OfxKeyword<'static> = OfxKeyword(b"Output\0");
pub const kOfxImageEffectPluginApi: OfxKeyword<'static> = OfxKeyword(b"OfxImageEffectPluginAPI\0");
pub const kOfxImageEffectPluginApiVersion: OfxStatus = 1;
pub const kOfxImageEffectPluginPropFieldRenderTwiceAlways: OfxKeyword<'static> = OfxKeyword(b"OfxImageEffectPluginPropFieldRenderTwiceAlways\0");
pub const kOfxImageEffectPluginPropGrouping: OfxKeyword<'static> = OfxKeyword(b"OfxImageEffectPluginPropGrouping\0");
pub const kOfxImageEffectPluginPropHostFrameThreading: OfxKeyword<'static> = OfxKeyword(b"OfxImageEffectPluginPropHostFrameThreading\0");
pub const kOfxImageEffectPluginPropOverlayInteractV1: OfxKeyword<'static> = OfxKeyword(b"OfxImageEffectPluginPropOverlayInteractV1\0");
pub const kOfxImageEffectPluginPropSingleInstance: OfxKeyword<'static> = OfxKeyword(b"OfxImageEffectPluginPropSingleInstance\0");
pub const kOfxImageEffectPluginRenderThreadSafety: OfxKeyword<'static> = OfxKeyword(b"OfxImageEffectPluginRenderThreadSafety\0");
pub const kOfxImageEffectPropClipPreferencesSlaveParam: OfxKeyword<'static> = OfxKeyword(b"OfxImageEffectPropClipPreferencesSlaveParam\0");
pub const kOfxImageEffectPropComponents: OfxKeyword<'static> = OfxKeyword(b"OfxImageEffectPropComponents\0");
pub const kOfxImageEffectPropContext: OfxKeyword<'static> = OfxKeyword(b"OfxImageEffectPropContext\0");
pub const kOfxImageEffectPropFieldToRender: OfxKeyword<'static> = OfxKeyword(b"OfxImageEffectPropFieldToRender\0");
pub const kOfxImageEffectPropFrameRange: OfxKeyword<'static> = OfxKeyword(b"OfxImageEffectPropFrameRange\0");
pub const kOfxImageEffectPropFrameRate: OfxKeyword<'static> = OfxKeyword(b"OfxImageEffectPropFrameRate\0");
pub const kOfxImageEffectPropFrameStep: OfxKeyword<'static> = OfxKeyword(b"OfxImageEffectPropFrameStep\0");
pub const kOfxImageEffectPropInAnalysis: OfxKeyword<'static> = OfxKeyword(b"OfxImageEffectPropInAnalysis\0");
pub const kOfxImageEffectPropInteractiveRenderStatus: OfxKeyword<'static> = OfxKeyword(b"OfxImageEffectPropInteractiveRenderStatus\0");
pub const kOfxImageEffectPropOpenGLEnabled: OfxKeyword<'static> = OfxKeyword(b"OfxImageEffectPropOpenGLEnabled\0");
pub const kOfxImageEffectPropOpenGLRenderSupported: OfxKeyword<'static> = OfxKeyword(b"OfxImageEffectPropOpenGLRenderSupported\0");
pub const kOfxImageEffectPropOpenGLTextureIndex: OfxKeyword<'static> = OfxKeyword(b"OfxImageEffectPropOpenGLTextureIndex\0");
pub const kOfxImageEffectPropOpenGLTextureTarget: OfxKeyword<'static> = OfxKeyword(b"OfxImageEffectPropOpenGLTextureTarget\0");
pub const kOfxImageEffectPropPixelDepth: OfxKeyword<'static> = OfxKeyword(b"OfxImageEffectPropPixelDepth\0");
pub const kOfxImageEffectPropPluginHandle: OfxKeyword<'static> = OfxKeyword(b"OfxImageEffectPropPluginHandle\0");
pub const kOfxImageEffectPropPreMultiplication: OfxKeyword<'static> = OfxKeyword(b"OfxImageEffectPropPreMultiplication\0");
pub const kOfxImageEffectPropProjectExtent: OfxKeyword<'static> = OfxKeyword(b"OfxImageEffectPropProjectExtent\0");
pub const kOfxImageEffectPropProjectOffset: OfxKeyword<'static> = OfxKeyword(b"OfxImageEffectPropProjectOffset\0");
pub const kOfxImageEffectPropProjectPixelAspectRatio: OfxKeyword<'static> = OfxKeyword(b"OfxImageEffectPropPixelAspectRatio\0");
pub const kOfxImageEffectPropProjectSize: OfxKeyword<'static> = OfxKeyword(b"OfxImageEffectPropProjectSize\0");
pub const kOfxImageEffectPropRegionOfDefinition: OfxKeyword<'static> = OfxKeyword(b"OfxImageEffectPropRegionOfDefinition\0");
pub const kOfxImageEffectPropRegionOfInterest: OfxKeyword<'static> = OfxKeyword(b"OfxImageEffectPropRegionOfInterest\0");
pub const kOfxImageEffectPropRenderQualityDraft: OfxKeyword<'static> = OfxKeyword(b"OfxImageEffectPropRenderQualityDraft\0");
pub const kOfxImageEffectPropRenderScale: OfxKeyword<'static> = OfxKeyword(b"OfxImageEffectPropRenderScale\0");
pub const kOfxImageEffectPropRenderWindow: OfxKeyword<'static> = OfxKeyword(b"OfxImageEffectPropRenderWindow\0");
pub const kOfxImageEffectPropSequentialRenderStatus: OfxKeyword<'static> = OfxKeyword(b"OfxImageEffectPropSequentialRenderStatus\0");
pub const kOfxImageEffectPropSetableFielding: OfxKeyword<'static> = OfxKeyword(b"OfxImageEffectPropSetableFielding\0");
pub const kOfxImageEffectPropSetableFrameRate: OfxKeyword<'static> = OfxKeyword(b"OfxImageEffectPropSetableFrameRate\0");
pub const kOfxImageEffectPropSupportedComponents: OfxKeyword<'static> = OfxKeyword(b"OfxImageEffectPropSupportedComponents\0");
pub const kOfxImageEffectPropSupportedContexts: OfxKeyword<'static> = OfxKeyword(b"OfxImageEffectPropSupportedContexts\0");
pub const kOfxImageEffectPropSupportedPixelDepths: OfxKeyword<'static> = OfxKeyword(b"OfxImageEffectPropSupportedPixelDepths\0");
pub const kOfxImageEffectPropSupportsMultiResolution: OfxKeyword<'static> = OfxKeyword(b"OfxImageEffectPropSupportsMultiResolution\0");
pub const kOfxImageEffectPropSupportsMultipleClipDepths: OfxKeyword<'static> = OfxKeyword(b"OfxImageEffectPropMultipleClipDepths\0");
pub const kOfxImageEffectPropSupportsMultipleClipPARs: OfxKeyword<'static> = OfxKeyword(b"OfxImageEffectPropSupportsMultipleClipPARs\0");
pub const kOfxImageEffectPropSupportsOverlays: OfxKeyword<'static> = OfxKeyword(b"OfxImageEffectPropSupportsOverlays\0");
pub const kOfxImageEffectPropSupportsTiles: OfxKeyword<'static> = OfxKeyword(b"OfxImageEffectPropSupportsTiles\0");
pub const kOfxImageEffectPropTemporalClipAccess: OfxKeyword<'static> = OfxKeyword(b"OfxImageEffectPropTemporalClipAccess\0");
pub const kOfxImageEffectPropUnmappedFrameRange: OfxKeyword<'static> = OfxKeyword(b"OfxImageEffectPropUnmappedFrameRange\0");
pub const kOfxImageEffectPropUnmappedFrameRate: OfxKeyword<'static> = OfxKeyword(b"OfxImageEffectPropUnmappedFrameRate\0");
pub const kOfxImageEffectRenderFullySafe: OfxKeyword<'static> = OfxKeyword(b"OfxImageEffectRenderFullySafe\0");
pub const kOfxImageEffectRenderInstanceSafe: OfxKeyword<'static> = OfxKeyword(b"OfxImageEffectRenderInstanceSafe\0");
pub const kOfxImageEffectRenderUnsafe: OfxKeyword<'static> = OfxKeyword(b"OfxImageEffectRenderUnsafe\0");
pub const kOfxImageEffectRetimerParamName: OfxKeyword<'static> = OfxKeyword(b"SourceTime\0");
pub const kOfxImageEffectSimpleSourceClipName: OfxKeyword<'static> = OfxKeyword(b"Source\0");
pub const kOfxImageEffectSuite: OfxKeyword<'static> = OfxKeyword(b"OfxImageEffectSuite\0");
pub const kOfxImageEffectTransitionParamName: OfxKeyword<'static> = OfxKeyword(b"Transition\0");
pub const kOfxImageEffectTransitionSourceFromClipName: OfxKeyword<'static> = OfxKeyword(b"SourceFrom\0");
pub const kOfxImageEffectTransitionSourceToClipName: OfxKeyword<'static> = OfxKeyword(b"SourceTo\0");
pub const kOfxImageFieldBoth: OfxKeyword<'static> = OfxKeyword(b"OfxFieldBoth\0");
pub const kOfxImageFieldDoubled: OfxKeyword<'static> = OfxKeyword(b"OfxFieldDoubled\0");
pub const kOfxImageFieldLower: OfxKeyword<'static> = OfxKeyword(b"OfxFieldLower\0");
pub const kOfxImageFieldNone: OfxKeyword<'static> = OfxKeyword(b"OfxFieldNone\0");
pub const kOfxImageFieldSingle: OfxKeyword<'static> = OfxKeyword(b"OfxFieldSingle\0");
pub const kOfxImageFieldUpper: OfxKeyword<'static> = OfxKeyword(b"OfxFieldUpper\0");
pub const kOfxImageOpaque: OfxKeyword<'static> = OfxKeyword(b"OfxImageOpaque\0");
pub const kOfxImagePreMultiplied: OfxKeyword<'static> = OfxKeyword(b"OfxImageAlphaPremultiplied\0");
pub const kOfxImagePropBounds: OfxKeyword<'static> = OfxKeyword(b"OfxImagePropBounds\0");
pub const kOfxImagePropData: OfxKeyword<'static> = OfxKeyword(b"OfxImagePropData\0");
pub const kOfxImagePropField: OfxKeyword<'static> = OfxKeyword(b"OfxImagePropField\0");
pub const kOfxImagePropPixelAspectRatio: OfxKeyword<'static> = OfxKeyword(b"OfxImagePropPixelAspectRatio\0");
pub const kOfxImagePropRegionOfDefinition: OfxKeyword<'static> = OfxKeyword(b"OfxImagePropRegionOfDefinition\0");
pub const kOfxImagePropRowBytes: OfxKeyword<'static> = OfxKeyword(b"OfxImagePropRowBytes\0");
pub const kOfxImagePropUniqueIdentifier: OfxKeyword<'static> = OfxKeyword(b"OfxImagePropUniqueIdentifier\0");
pub const kOfxImageUnPreMultiplied: OfxKeyword<'static> = OfxKeyword(b"OfxImageAlphaUnPremultiplied\0");
pub const kOfxInteractActionDraw: OfxKeyword<'static> = OfxKeyword(b"OfxInteractActionDraw\0");
pub const kOfxInteractActionGainFocus: OfxKeyword<'static> = OfxKeyword(b"OfxInteractActionGainFocus\0");
pub const kOfxInteractActionKeyDown: OfxKeyword<'static> = OfxKeyword(b"OfxInteractActionKeyDown\0");
pub const kOfxInteractActionKeyRepeat: OfxKeyword<'static> = OfxKeyword(b"OfxInteractActionKeyRepeat\0");
pub const kOfxInteractActionKeyUp: OfxKeyword<'static> = OfxKeyword(b"OfxInteractActionKeyUp\0");
pub const kOfxInteractActionLoseFocus: OfxKeyword<'static> = OfxKeyword(b"OfxInteractActionLoseFocus\0");
pub const kOfxInteractActionPenDown: OfxKeyword<'static> = OfxKeyword(b"OfxInteractActionPenDown\0");
pub const kOfxInteractActionPenMotion: OfxKeyword<'static> = OfxKeyword(b"OfxInteractActionPenMotion\0");
pub const kOfxInteractActionPenUp: OfxKeyword<'static> = OfxKeyword(b"OfxInteractActionPenUp\0");
pub const kOfxInteractPropBackgroundColour: OfxKeyword<'static> = OfxKeyword(b"OfxInteractPropBackgroundColour\0");
pub const kOfxInteractPropBitDepth: OfxKeyword<'static> = OfxKeyword(b"OfxInteractPropBitDepth\0");
pub const kOfxInteractPropHasAlpha: OfxKeyword<'static> = OfxKeyword(b"OfxInteractPropHasAlpha\0");
pub const kOfxInteractPropPenPosition: OfxKeyword<'static> = OfxKeyword(b"OfxInteractPropPenPosition\0");
pub const kOfxInteractPropPenPressure: OfxKeyword<'static> = OfxKeyword(b"OfxInteractPropPenPressure\0");
pub const kOfxInteractPropPenViewportPosition: OfxKeyword<'static> = OfxKeyword(b"OfxInteractPropPenViewportPosition\0");
pub const kOfxInteractPropPixelScale: OfxKeyword<'static> = OfxKeyword(b"OfxInteractPropPixelScale\0");
pub const kOfxInteractPropSlaveToParam: OfxKeyword<'static> = OfxKeyword(b"OfxInteractPropSlaveToParam\0");
pub const kOfxInteractPropSuggestedColour: OfxKeyword<'static> = OfxKeyword(b"OfxInteractPropSuggestedColour\0");
pub const kOfxInteractPropViewportSize: OfxKeyword<'static> = OfxKeyword(b"OfxInteractPropViewport\0");
pub const kOfxInteractSuite: OfxKeyword<'static> = OfxKeyword(b"OfxInteractSuite\0");
pub const kOfxKey_0: u32 = 0x030;
pub const kOfxKey_1: u32 = 0x031;
pub const kOfxKey_2: u32 = 0x032;
pub const kOfxKey_3: u32 = 0x033;
pub const kOfxKey_4: u32 = 0x034;
pub const kOfxKey_5: u32 = 0x035;
pub const kOfxKey_6: u32 = 0x036;
pub const kOfxKey_7: u32 = 0x037;
pub const kOfxKey_8: u32 = 0x038;
pub const kOfxKey_9: u32 = 0x039;
pub const kOfxKey_A: u32 = 0x041;
pub const kOfxKey_AE: u32 = 0x0c6;
pub const kOfxKey_Aacute: u32 = 0x0c1;
pub const kOfxKey_Acircumflex: u32 = 0x0c2;
pub const kOfxKey_Adiaeresis: u32 = 0x0c4;
pub const kOfxKey_Agrave: u32 = 0x0c0;
pub const kOfxKey_Alt_L: u32 = 0xFFE9;
pub const kOfxKey_Alt_R: u32 = 0xFFEA;
pub const kOfxKey_Aring: u32 = 0x0c5;
pub const kOfxKey_Atilde: u32 = 0x0c3;
pub const kOfxKey_B: u32 = 0x042;
pub const kOfxKey_BackSpace: u32 = 0xFF08;
pub const kOfxKey_Begin: u32 = 0xFF58;
pub const kOfxKey_Break: u32 = 0xFF6B;
pub const kOfxKey_C: u32 = 0x043;
pub const kOfxKey_Cancel: u32 = 0xFF69;
pub const kOfxKey_Caps_Lock: u32 = 0xFFE5;
pub const kOfxKey_Ccedilla: u32 = 0x0c7;
pub const kOfxKey_Clear: u32 = 0xFF0B;
pub const kOfxKey_Control_L: u32 = 0xFFE3;
pub const kOfxKey_Control_R: u32 = 0xFFE4;
pub const kOfxKey_D: u32 = 0x044;
pub const kOfxKey_Delete: u32 = 0xFFFF;
pub const kOfxKey_Down: u32 = 0xFF54;
pub const kOfxKey_E: u32 = 0x045;
pub const kOfxKey_ETH: u32 = 0x0d0;
pub const kOfxKey_Eacute: u32 = 0x0c9;
pub const kOfxKey_Ecircumflex: u32 = 0x0ca;
pub const kOfxKey_Ediaeresis: u32 = 0x0cb;
pub const kOfxKey_Egrave: u32 = 0x0c8;
pub const kOfxKey_Eisu_Shift: u32 = 0xFF2F;
pub const kOfxKey_Eisu_toggle: u32 = 0xFF30;
pub const kOfxKey_End: u32 = 0xFF57;
pub const kOfxKey_Escape: u32 = 0xFF1B;
pub const kOfxKey_Eth: u32 = 0x0d0;
pub const kOfxKey_Execute: u32 = 0xFF62;
pub const kOfxKey_F10: u32 = 0xFFC7;
pub const kOfxKey_F11: u32 = 0xFFC8;
pub const kOfxKey_F12: u32 = 0xFFC9;
pub const kOfxKey_F13: u32 = 0xFFCA;
pub const kOfxKey_F14: u32 = 0xFFCB;
pub const kOfxKey_F15: u32 = 0xFFCC;
pub const kOfxKey_F16: u32 = 0xFFCD;
pub const kOfxKey_F17: u32 = 0xFFCE;
pub const kOfxKey_F18: u32 = 0xFFCF;
pub const kOfxKey_F19: u32 = 0xFFD0;
pub const kOfxKey_F1: u32 = 0xFFBE;
pub const kOfxKey_F20: u32 = 0xFFD1;
pub const kOfxKey_F21: u32 = 0xFFD2;
pub const kOfxKey_F22: u32 = 0xFFD3;
pub const kOfxKey_F23: u32 = 0xFFD4;
pub const kOfxKey_F24: u32 = 0xFFD5;
pub const kOfxKey_F25: u32 = 0xFFD6;
pub const kOfxKey_F26: u32 = 0xFFD7;
pub const kOfxKey_F27: u32 = 0xFFD8;
pub const kOfxKey_F28: u32 = 0xFFD9;
pub const kOfxKey_F29: u32 = 0xFFDA;
pub const kOfxKey_F2: u32 = 0xFFBF;
pub const kOfxKey_F30: u32 = 0xFFDB;
pub const kOfxKey_F31: u32 = 0xFFDC;
pub const kOfxKey_F32: u32 = 0xFFDD;
pub const kOfxKey_F33: u32 = 0xFFDE;
pub const kOfxKey_F34: u32 = 0xFFDF;
pub const kOfxKey_F35: u32 = 0xFFE0;
pub const kOfxKey_F3: u32 = 0xFFC0;
pub const kOfxKey_F4: u32 = 0xFFC1;
pub const kOfxKey_F5: u32 = 0xFFC2;
pub const kOfxKey_F6: u32 = 0xFFC3;
pub const kOfxKey_F7: u32 = 0xFFC4;
pub const kOfxKey_F8: u32 = 0xFFC5;
pub const kOfxKey_F9: u32 = 0xFFC6;
pub const kOfxKey_F: u32 = 0x046;
pub const kOfxKey_Find: u32 = 0xFF68;
pub const kOfxKey_G: u32 = 0x047;
pub const kOfxKey_H: u32 = 0x048;
pub const kOfxKey_Hankaku: u32 = 0xFF29;
pub const kOfxKey_Help: u32 = 0xFF6A;
pub const kOfxKey_Henkan: u32 = 0xFF23;
pub const kOfxKey_Henkan_Mode: u32 = 0xFF23;
pub const kOfxKey_Hiragana: u32 = 0xFF25;
pub const kOfxKey_Hiragana_Katakana: u32 = 0xFF27;
pub const kOfxKey_Home: u32 = 0xFF50;
pub const kOfxKey_Hyper_L: u32 = 0xFFED;
pub const kOfxKey_Hyper_R: u32 = 0xFFEE;
pub const kOfxKey_I: u32 = 0x049;
pub const kOfxKey_Iacute: u32 = 0x0cd;
pub const kOfxKey_Icircumflex: u32 = 0x0ce;
pub const kOfxKey_Idiaeresis: u32 = 0x0cf;
pub const kOfxKey_Igrave: u32 = 0x0cc;
pub const kOfxKey_Insert: u32 = 0xFF63;
pub const kOfxKey_J: u32 = 0x04a;
pub const kOfxKey_K: u32 = 0x04b;
pub const kOfxKey_KP_0: u32 = 0xFFB0;
pub const kOfxKey_KP_1: u32 = 0xFFB1;
pub const kOfxKey_KP_2: u32 = 0xFFB2;
pub const kOfxKey_KP_3: u32 = 0xFFB3;
pub const kOfxKey_KP_4: u32 = 0xFFB4;
pub const kOfxKey_KP_5: u32 = 0xFFB5;
pub const kOfxKey_KP_6: u32 = 0xFFB6;
pub const kOfxKey_KP_7: u32 = 0xFFB7;
pub const kOfxKey_KP_8: u32 = 0xFFB8;
pub const kOfxKey_KP_9: u32 = 0xFFB9;
pub const kOfxKey_KP_Add: u32 = 0xFFAB;
pub const kOfxKey_KP_Begin: u32 = 0xFF9D;
pub const kOfxKey_KP_Decimal: u32 = 0xFFAE;
pub const kOfxKey_KP_Delete: u32 = 0xFF9F;
pub const kOfxKey_KP_Divide: u32 = 0xFFAF;
pub const kOfxKey_KP_Down: u32 = 0xFF99;
pub const kOfxKey_KP_End: u32 = 0xFF9C;
pub const kOfxKey_KP_Enter: u32 = 0xFF8D;
pub const kOfxKey_KP_Equal: u32 = 0xFFBD;
pub const kOfxKey_KP_F1: u32 = 0xFF91;
pub const kOfxKey_KP_F2: u32 = 0xFF92;
pub const kOfxKey_KP_F3: u32 = 0xFF93;
pub const kOfxKey_KP_F4: u32 = 0xFF94;
pub const kOfxKey_KP_Home: u32 = 0xFF95;
pub const kOfxKey_KP_Insert: u32 = 0xFF9E;
pub const kOfxKey_KP_Left: u32 = 0xFF96;
pub const kOfxKey_KP_Multiply: u32 = 0xFFAA;
pub const kOfxKey_KP_Next: u32 = 0xFF9B;
pub const kOfxKey_KP_Page_Down: u32 = 0xFF9B;
pub const kOfxKey_KP_Page_Up: u32 = 0xFF9A;
pub const kOfxKey_KP_Prior: u32 = 0xFF9A;
pub const kOfxKey_KP_Right: u32 = 0xFF98;
pub const kOfxKey_KP_Separator: u32 = 0xFFAC;
pub const kOfxKey_KP_Space: u32 = 0xFF80;
pub const kOfxKey_KP_Subtract: u32 = 0xFFAD;
pub const kOfxKey_KP_Tab: u32 = 0xFF89;
pub const kOfxKey_KP_Up: u32 = 0xFF97;
pub const kOfxKey_Kana_Lock: u32 = 0xFF2D;
pub const kOfxKey_Kana_Shift: u32 = 0xFF2E;
pub const kOfxKey_Kanji: u32 = 0xFF21;
pub const kOfxKey_Katakana: u32 = 0xFF26;
pub const kOfxKey_L10: u32 = 0xFFD1;
pub const kOfxKey_L1: u32 = 0xFFC8;
pub const kOfxKey_L2: u32 = 0xFFC9;
pub const kOfxKey_L3: u32 = 0xFFCA;
pub const kOfxKey_L4: u32 = 0xFFCB;
pub const kOfxKey_L5: u32 = 0xFFCC;
pub const kOfxKey_L6: u32 = 0xFFCD;
pub const kOfxKey_L7: u32 = 0xFFCE;
pub const kOfxKey_L8: u32 = 0xFFCF;
pub const kOfxKey_L9: u32 = 0xFFD0;
pub const kOfxKey_L: u32 = 0x04c;
pub const kOfxKey_Left: u32 = 0xFF51;
pub const kOfxKey_Linefeed: u32 = 0xFF0A;
pub const kOfxKey_M: u32 = 0x04d;
pub const kOfxKey_Mae_Koho: u32 = 0xFF3E;
pub const kOfxKey_Massyo: u32 = 0xFF2C;
pub const kOfxKey_Menu: u32 = 0xFF67;
pub const kOfxKey_Meta_L: u32 = 0xFFE7;
pub const kOfxKey_Meta_R: u32 = 0xFFE8;
pub const kOfxKey_Mode_switch: u32 = 0xFF7E;
pub const kOfxKey_Muhenkan: u32 = 0xFF22;
pub const kOfxKey_Multi_key: u32 = 0xFF20;
pub const kOfxKey_MultipleCandidate: u32 = 0xFF3D;
pub const kOfxKey_N: u32 = 0x04e;
pub const kOfxKey_Next: u32 = 0xFF56;
pub const kOfxKey_Ntilde: u32 = 0x0d1;
pub const kOfxKey_Num_Lock: u32 = 0xFF7F;
pub const kOfxKey_O: u32 = 0x04f;
pub const kOfxKey_Oacute: u32 = 0x0d3;
pub const kOfxKey_Ocircumflex: u32 = 0x0d4;
pub const kOfxKey_Odiaeresis: u32 = 0x0d6;
pub const kOfxKey_Ograve: u32 = 0x0d2;
pub const kOfxKey_Ooblique: u32 = 0x0d8;
pub const kOfxKey_Otilde: u32 = 0x0d5;
pub const kOfxKey_P: u32 = 0x050;
pub const kOfxKey_Page_Down: u32 = 0xFF56;
pub const kOfxKey_Page_Up: u32 = 0xFF55;
pub const kOfxKey_Pause: u32 = 0xFF13;
pub const kOfxKey_PreviousCandidate: u32 = 0xFF3E;
pub const kOfxKey_Print: u32 = 0xFF61;
pub const kOfxKey_Prior: u32 = 0xFF55;
pub const kOfxKey_Q: u32 = 0x051;
pub const kOfxKey_R10: u32 = 0xFFDB;
pub const kOfxKey_R11: u32 = 0xFFDC;
pub const kOfxKey_R12: u32 = 0xFFDD;
pub const kOfxKey_R13: u32 = 0xFFDE;
pub const kOfxKey_R14: u32 = 0xFFDF;
pub const kOfxKey_R15: u32 = 0xFFE0;
pub const kOfxKey_R1: u32 = 0xFFD2;
pub const kOfxKey_R2: u32 = 0xFFD3;
pub const kOfxKey_R3: u32 = 0xFFD4;
pub const kOfxKey_R4: u32 = 0xFFD5;
pub const kOfxKey_R5: u32 = 0xFFD6;
pub const kOfxKey_R6: u32 = 0xFFD7;
pub const kOfxKey_R7: u32 = 0xFFD8;
pub const kOfxKey_R8: u32 = 0xFFD9;
pub const kOfxKey_R9: u32 = 0xFFDA;
pub const kOfxKey_R: u32 = 0x052;
pub const kOfxKey_Redo: u32 = 0xFF66;
pub const kOfxKey_Return: u32 = 0xFF0D;
pub const kOfxKey_Right: u32 = 0xFF53;
pub const kOfxKey_Romaji: u32 = 0xFF24;
pub const kOfxKey_S: u32 = 0x053;
pub const kOfxKey_Scroll_Lock: u32 = 0xFF14;
pub const kOfxKey_Select: u32 = 0xFF60;
pub const kOfxKey_Shift_L: u32 = 0xFFE1;
pub const kOfxKey_Shift_Lock: u32 = 0xFFE6;
pub const kOfxKey_Shift_R: u32 = 0xFFE2;
pub const kOfxKey_SingleCandidate: u32 = 0xFF3C;
pub const kOfxKey_Super_L: u32 = 0xFFEB;
pub const kOfxKey_Super_R: u32 = 0xFFEC;
pub const kOfxKey_Sys_Req: u32 = 0xFF15;
pub const kOfxKey_T: u32 = 0x054;
pub const kOfxKey_THORN: u32 = 0x0de;
pub const kOfxKey_Tab: u32 = 0xFF09;
pub const kOfxKey_Touroku: u32 = 0xFF2B;
pub const kOfxKey_U: u32 = 0x055;
pub const kOfxKey_Uacute: u32 = 0x0da;
pub const kOfxKey_Ucircumflex: u32 = 0x0db;
pub const kOfxKey_Udiaeresis: u32 = 0x0dc;
pub const kOfxKey_Ugrave: u32 = 0x0d9;
pub const kOfxKey_Undo: u32 = 0xFF65;
pub const kOfxKey_Unknown: u32 = 0x0;
pub const kOfxKey_Up: u32 = 0xFF52;
pub const kOfxKey_V: u32 = 0x056;
pub const kOfxKey_W: u32 = 0x057;
pub const kOfxKey_X: u32 = 0x058;
pub const kOfxKey_Y: u32 = 0x059;
pub const kOfxKey_Yacute: u32 = 0x0dd;
pub const kOfxKey_Z: u32 = 0x05a;
pub const kOfxKey_Zen_Koho: u32 = 0xFF3D;
pub const kOfxKey_Zenkaku: u32 = 0xFF28;
pub const kOfxKey_Zenkaku_Hankaku: u32 = 0xFF2A;
pub const kOfxKey_a: u32 = 0x061;
pub const kOfxKey_aacute: u32 = 0x0e1;
pub const kOfxKey_acircumflex: u32 = 0x0e2;
pub const kOfxKey_acute: u32 = 0x0b4;
pub const kOfxKey_adiaeresis: u32 = 0x0e4;
pub const kOfxKey_ae: u32 = 0x0e6;
pub const kOfxKey_agrave: u32 = 0x0e0;
pub const kOfxKey_ampersand: u32 = 0x026;
pub const kOfxKey_apostrophe: u32 = 0x027;
pub const kOfxKey_aring: u32 = 0x0e5;
pub const kOfxKey_asciicircum: u32 = 0x05e;
pub const kOfxKey_asciitilde: u32 = 0x07e;
pub const kOfxKey_asterisk: u32 = 0x02a;
pub const kOfxKey_at: u32 = 0x040;
pub const kOfxKey_atilde: u32 = 0x0e3;
pub const kOfxKey_b: u32 = 0x062;
pub const kOfxKey_backslash: u32 = 0x05c;
pub const kOfxKey_bar: u32 = 0x07c;
pub const kOfxKey_braceleft: u32 = 0x07b;
pub const kOfxKey_braceright: u32 = 0x07d;
pub const kOfxKey_bracketleft: u32 = 0x05b;
pub const kOfxKey_bracketright: u32 = 0x05d;
pub const kOfxKey_brokenbar: u32 = 0x0a6;
pub const kOfxKey_c: u32 = 0x063;
pub const kOfxKey_ccedilla: u32 = 0x0e7;
pub const kOfxKey_cedilla: u32 = 0x0b8;
pub const kOfxKey_cent: u32 = 0x0a2;
pub const kOfxKey_colon: u32 = 0x03a;
pub const kOfxKey_comma: u32 = 0x02c;
pub const kOfxKey_copyright: u32 = 0x0a9;
pub const kOfxKey_currency: u32 = 0x0a4;
pub const kOfxKey_d: u32 = 0x064;
pub const kOfxKey_degree: u32 = 0x0b0;
pub const kOfxKey_diaeresis: u32 = 0x0a8;
pub const kOfxKey_division: u32 = 0x0f7;
pub const kOfxKey_dollar: u32 = 0x024;
pub const kOfxKey_e: u32 = 0x065;
pub const kOfxKey_eacute: u32 = 0x0e9;
pub const kOfxKey_ecircumflex: u32 = 0x0ea;
pub const kOfxKey_ediaeresis: u32 = 0x0eb;
pub const kOfxKey_egrave: u32 = 0x0e8;
pub const kOfxKey_equal: u32 = 0x03d;
pub const kOfxKey_eth: u32 = 0x0f0;
pub const kOfxKey_exclam: u32 = 0x021;
pub const kOfxKey_exclamdown: u32 = 0x0a1;
pub const kOfxKey_f: u32 = 0x066;
pub const kOfxKey_g: u32 = 0x067;
pub const kOfxKey_grave: u32 = 0x060;
pub const kOfxKey_greater: u32 = 0x03e;
pub const kOfxKey_guillemotleft: u32 = 0x0ab;
pub const kOfxKey_guillemotright: u32 = 0x0bb;
pub const kOfxKey_h: u32 = 0x068;
pub const kOfxKey_hyphen: u32 = 0x0ad;
pub const kOfxKey_i: u32 = 0x069;
pub const kOfxKey_iacute: u32 = 0x0ed;
pub const kOfxKey_icircumflex: u32 = 0x0ee;
pub const kOfxKey_idiaeresis: u32 = 0x0ef;
pub const kOfxKey_igrave: u32 = 0x0ec;
pub const kOfxKey_j: u32 = 0x06a;
pub const kOfxKey_k: u32 = 0x06b;
pub const kOfxKey_l: u32 = 0x06c;
pub const kOfxKey_less: u32 = 0x03c;
pub const kOfxKey_m: u32 = 0x06d;
pub const kOfxKey_macron: u32 = 0x0af;
pub const kOfxKey_masculine: u32 = 0x0ba;
pub const kOfxKey_minus: u32 = 0x02d;
pub const kOfxKey_mu: u32 = 0x0b5;
pub const kOfxKey_multiply: u32 = 0x0d7;
pub const kOfxKey_n: u32 = 0x06e;
pub const kOfxKey_nobreakspace: u32 = 0x0a0;
pub const kOfxKey_notsign: u32 = 0x0ac;
pub const kOfxKey_ntilde: u32 = 0x0f1;
pub const kOfxKey_numbersign: u32 = 0x023;
pub const kOfxKey_o: u32 = 0x06f;
pub const kOfxKey_oacute: u32 = 0x0f3;
pub const kOfxKey_ocircumflex: u32 = 0x0f4;
pub const kOfxKey_odiaeresis: u32 = 0x0f6;
pub const kOfxKey_ograve: u32 = 0x0f2;
pub const kOfxKey_onehalf: u32 = 0x0bd;
pub const kOfxKey_onequarter: u32 = 0x0bc;
pub const kOfxKey_onesuperior: u32 = 0x0b9;
pub const kOfxKey_ordfeminine: u32 = 0x0aa;
pub const kOfxKey_oslash: u32 = 0x0f8;
pub const kOfxKey_otilde: u32 = 0x0f5;
pub const kOfxKey_p: u32 = 0x070;
pub const kOfxKey_paragraph: u32 = 0x0b6;
pub const kOfxKey_parenleft: u32 = 0x028;
pub const kOfxKey_parenright: u32 = 0x029;
pub const kOfxKey_percent: u32 = 0x025;
pub const kOfxKey_period: u32 = 0x02e;
pub const kOfxKey_periodcentered: u32 = 0x0b7;
pub const kOfxKey_plus: u32 = 0x02b;
pub const kOfxKey_plusminus: u32 = 0x0b1;
pub const kOfxKey_q: u32 = 0x071;
pub const kOfxKey_question: u32 = 0x03f;
pub const kOfxKey_questiondown: u32 = 0x0bf;
pub const kOfxKey_quotedbl: u32 = 0x022;
pub const kOfxKey_quoteleft: u32 = 0x060;
pub const kOfxKey_quoteright: u32 = 0x027;
pub const kOfxKey_r: u32 = 0x072;
pub const kOfxKey_registered: u32 = 0x0ae;
pub const kOfxKey_s: u32 = 0x073;
pub const kOfxKey_script_switch: u32 = 0xFF7E;
pub const kOfxKey_section: u32 = 0x0a7;
pub const kOfxKey_semicolon: u32 = 0x03b;
pub const kOfxKey_slash: u32 = 0x02f;
pub const kOfxKey_space: u32 = 0x020;
pub const kOfxKey_ssharp: u32 = 0x0df;
pub const kOfxKey_sterling: u32 = 0x0a3;
pub const kOfxKey_t: u32 = 0x074;
pub const kOfxKey_thorn: u32 = 0x0fe;
pub const kOfxKey_threequarters: u32 = 0x0be;
pub const kOfxKey_threesuperior: u32 = 0x0b3;
pub const kOfxKey_twosuperior: u32 = 0x0b2;
pub const kOfxKey_u: u32 = 0x075;
pub const kOfxKey_uacute: u32 = 0x0fa;
pub const kOfxKey_ucircumflex: u32 = 0x0fb;
pub const kOfxKey_udiaeresis: u32 = 0x0fc;
pub const kOfxKey_ugrave: u32 = 0x0f9;
pub const kOfxKey_underscore: u32 = 0x05f;
pub const kOfxKey_v: u32 = 0x076;
pub const kOfxKey_w: u32 = 0x077;
pub const kOfxKey_x: u32 = 0x078;
pub const kOfxKey_y: u32 = 0x079;
pub const kOfxKey_yacute: u32 = 0x0fd;
pub const kOfxKey_ydiaeresis: u32 = 0x0ff;
pub const kOfxKey_yen: u32 = 0x0a5;
pub const kOfxKey_z: u32 = 0x07a;
pub const kOfxMemorySuite: OfxKeyword<'static> = OfxKeyword(b"OfxMemorySuite\0");
pub const kOfxMessageError: OfxKeyword<'static> = OfxKeyword(b"OfxMessageError\0");
pub const kOfxMessageFatal: OfxKeyword<'static> = OfxKeyword(b"OfxMessageFatal\0");
pub const kOfxMessageLog: OfxKeyword<'static> = OfxKeyword(b"OfxMessageLog\0");
pub const kOfxMessageMessage: OfxKeyword<'static> = OfxKeyword(b"OfxMessageMessage\0");
pub const kOfxMessageQuestion: OfxKeyword<'static> = OfxKeyword(b"OfxMessageQuestion\0");
pub const kOfxMessageSuite: OfxKeyword<'static> = OfxKeyword(b"OfxMessageSuite\0");
pub const kOfxMessageWarning: OfxKeyword<'static> = OfxKeyword(b"OfxMessageWarning\0");
pub const kOfxMultiThreadSuite: OfxKeyword<'static> = OfxKeyword(b"OfxMultiThreadSuite\0");
pub const kOfxOpenGLPropPixelDepth: OfxKeyword<'static> = OfxKeyword(b"OfxOpenGLPropPixelDepth\0");
pub const kOfxOpenGLRenderSuite: OfxKeyword<'static> = OfxKeyword(b"OfxImageEffectOpenGLRenderSuite\0");
pub const kOfxParamCoordinatesCanonical: OfxKeyword<'static> = OfxKeyword(b"OfxParamCoordinatesCanonical\0");
pub const kOfxParamCoordinatesNormalised: OfxKeyword<'static> = OfxKeyword(b"OfxParamCoordinatesNormalised\0");
pub const kOfxParamDoubleTypeAbsoluteTime: OfxKeyword<'static> = OfxKeyword(b"OfxParamDoubleTypeAbsoluteTime\0");
pub const kOfxParamDoubleTypeAngle: OfxKeyword<'static> = OfxKeyword(b"OfxParamDoubleTypeAngle\0");
pub const kOfxParamDoubleTypeNormalisedX: OfxKeyword<'static> = OfxKeyword(b"OfxParamDoubleTypeNormalisedX\0");
pub const kOfxParamDoubleTypeNormalisedXAbsolute: OfxKeyword<'static> = OfxKeyword(b"OfxParamDoubleTypeNormalisedXAbsolute\0");
pub const kOfxParamDoubleTypeNormalisedXY: OfxKeyword<'static> = OfxKeyword(b"OfxParamDoubleTypeNormalisedXY\0");
pub const kOfxParamDoubleTypeNormalisedXYAbsolute: OfxKeyword<'static> = OfxKeyword(b"OfxParamDoubleTypeNormalisedXYAbsolute\0");
pub const kOfxParamDoubleTypeNormalisedY: OfxKeyword<'static> = OfxKeyword(b"OfxParamDoubleTypeNormalisedY\0");
pub const kOfxParamDoubleTypeNormalisedYAbsolute: OfxKeyword<'static> = OfxKeyword(b"OfxParamDoubleTypeNormalisedYAbsolute\0");
pub const kOfxParamDoubleTypePlain: OfxKeyword<'static> = OfxKeyword(b"OfxParamDoubleTypePlain\0");
pub const kOfxParamDoubleTypeScale: OfxKeyword<'static> = OfxKeyword(b"OfxParamDoubleTypeScale\0");
pub const kOfxParamDoubleTypeTime: OfxKeyword<'static> = OfxKeyword(b"OfxParamDoubleTypeTime\0");
pub const kOfxParamDoubleTypeX: OfxKeyword<'static> = OfxKeyword(b"OfxParamDoubleTypeX\0");
pub const kOfxParamDoubleTypeXAbsolute: OfxKeyword<'static> = OfxKeyword(b"OfxParamDoubleTypeXAbsolute\0");
pub const kOfxParamDoubleTypeXY: OfxKeyword<'static> = OfxKeyword(b"OfxParamDoubleTypeXY\0");
pub const kOfxParamDoubleTypeXYAbsolute: OfxKeyword<'static> = OfxKeyword(b"OfxParamDoubleTypeXYAbsolute\0");
pub const kOfxParamDoubleTypeY: OfxKeyword<'static> = OfxKeyword(b"OfxParamDoubleTypeY\0");
pub const kOfxParamDoubleTypeYAbsolute: OfxKeyword<'static> = OfxKeyword(b"OfxParamDoubleTypeYAbsolute\0");
pub const kOfxParamHostPropMaxPages: OfxKeyword<'static> = OfxKeyword(b"OfxParamHostPropMaxPages\0");
pub const kOfxParamHostPropMaxParameters: OfxKeyword<'static> = OfxKeyword(b"OfxParamHostPropMaxParameters\0");
pub const kOfxParamHostPropPageRowColumnCount: OfxKeyword<'static> = OfxKeyword(b"OfxParamHostPropPageRowColumnCount\0");
pub const kOfxParamHostPropSupportsBooleanAnimation: OfxKeyword<'static> = OfxKeyword(b"OfxParamHostPropSupportsBooleanAnimation\0");
pub const kOfxParamHostPropSupportsChoiceAnimation: OfxKeyword<'static> = OfxKeyword(b"OfxParamHostPropSupportsChoiceAnimation\0");
pub const kOfxParamHostPropSupportsCustomAnimation: OfxKeyword<'static> = OfxKeyword(b"OfxParamHostPropSupportsCustomAnimation\0");
pub const kOfxParamHostPropSupportsCustomInteract: OfxKeyword<'static> = OfxKeyword(b"OfxParamHostPropSupportsCustomInteract\0");
pub const kOfxParamHostPropSupportsParametricAnimation: OfxKeyword<'static> = OfxKeyword(b"OfxParamHostPropSupportsParametricAnimation\0");
pub const kOfxParamHostPropSupportsStringAnimation: OfxKeyword<'static> = OfxKeyword(b"OfxParamHostPropSupportsStringAnimation\0");
pub const kOfxParamInvalidateAll: OfxKeyword<'static> = OfxKeyword(b"OfxParamInvalidateAll\0");
pub const kOfxParamInvalidateValueChange: OfxKeyword<'static> = OfxKeyword(b"OfxParamInvalidateValueChange\0");
pub const kOfxParamInvalidateValueChangeToEnd: OfxKeyword<'static> = OfxKeyword(b"OfxParamInvalidateValueChangeToEnd\0");
pub const kOfxParamPageSkipColumn: OfxKeyword<'static> = OfxKeyword(b"OfxParamPageSkipColumn\0");
pub const kOfxParamPageSkipRow: OfxKeyword<'static> = OfxKeyword(b"OfxParamPageSkipRow\0");
pub const kOfxParamPropAnimates: OfxKeyword<'static> = OfxKeyword(b"OfxParamPropAnimates\0");
pub const kOfxParamPropCacheInvalidation: OfxKeyword<'static> = OfxKeyword(b"OfxParamPropCacheInvalidation\0");
pub const kOfxParamPropCanUndo: OfxKeyword<'static> = OfxKeyword(b"OfxParamPropCanUndo\0");
pub const kOfxParamPropChoiceOption: OfxKeyword<'static> = OfxKeyword(b"OfxParamPropChoiceOption\0");
pub const kOfxParamPropCustomInterpCallbackV1: OfxKeyword<'static> = OfxKeyword(b"OfxParamPropCustomCallbackV1\0");
pub const kOfxParamPropCustomValue: OfxKeyword<'static> = OfxKeyword(b"OfxParamPropCustomValue\0");
pub const kOfxParamPropDataPtr: OfxKeyword<'static> = OfxKeyword(b"OfxParamPropDataPtr\0");
pub const kOfxParamPropDefault: OfxKeyword<'static> = OfxKeyword(b"OfxParamPropDefault\0");
pub const kOfxParamPropDefaultCoordinateSystem: OfxKeyword<'static> = OfxKeyword(b"OfxParamPropDefaultCoordinateSystem\0");
pub const kOfxParamPropDigits: OfxKeyword<'static> = OfxKeyword(b"OfxParamPropDigits\0");
pub const kOfxParamPropDimensionLabel: OfxKeyword<'static> = OfxKeyword(b"OfxParamPropDimensionLabel\0");
pub const kOfxParamPropDisplayMax: OfxKeyword<'static> = OfxKeyword(b"OfxParamPropDisplayMax\0");
pub const kOfxParamPropDisplayMin: OfxKeyword<'static> = OfxKeyword(b"OfxParamPropDisplayMin\0");
pub const kOfxParamPropDoubleType: OfxKeyword<'static> = OfxKeyword(b"OfxParamPropDoubleType\0");
pub const kOfxParamPropEnabled: OfxKeyword<'static> = OfxKeyword(b"OfxParamPropEnabled\0");
pub const kOfxParamPropEvaluateOnChange: OfxKeyword<'static> = OfxKeyword(b"OfxParamPropEvaluateOnChange\0");
pub const kOfxParamPropGroupOpen: OfxKeyword<'static> = OfxKeyword(b"OfxParamPropGroupOpen\0");
pub const kOfxParamPropHasHostOverlayHandle: OfxKeyword<'static> = OfxKeyword(b"OfxParamPropHasHostOverlayHandle\0");
pub const kOfxParamPropHint: OfxKeyword<'static> = OfxKeyword(b"OfxParamPropHint\0");
pub const kOfxParamPropIncrement: OfxKeyword<'static> = OfxKeyword(b"OfxParamPropIncrement\0");
pub const kOfxParamPropInteractMinimumSize: OfxKeyword<'static> = OfxKeyword(b"OfxParamPropInteractMinimumSize\0");
pub const kOfxParamPropInteractPreferedSize: OfxKeyword<'static> = OfxKeyword(b"OfxParamPropInteractPreferedSize\0");
pub const kOfxParamPropInteractSize: OfxKeyword<'static> = OfxKeyword(b"OfxParamPropInteractSize\0");
pub const kOfxParamPropInteractSizeAspect: OfxKeyword<'static> = OfxKeyword(b"OfxParamPropInteractSizeAspect\0");
pub const kOfxParamPropInteractV1: OfxKeyword<'static> = OfxKeyword(b"OfxParamPropInteractV1\0");
pub const kOfxParamPropInterpolationAmount: OfxKeyword<'static> = OfxKeyword(b"OfxParamPropInterpolationAmount\0");
pub const kOfxParamPropInterpolationTime: OfxKeyword<'static> = OfxKeyword(b"OfxParamPropInterpolationTime\0");
pub const kOfxParamPropIsAnimating: OfxKeyword<'static> = OfxKeyword(b"OfxParamPropIsAnimating\0");
pub const kOfxParamPropIsAutoKeying: OfxKeyword<'static> = OfxKeyword(b"OfxParamPropIsAutoKeying\0");
pub const kOfxParamPropMax: OfxKeyword<'static> = OfxKeyword(b"OfxParamPropMax\0");
pub const kOfxParamPropMin: OfxKeyword<'static> = OfxKeyword(b"OfxParamPropMin\0");
pub const kOfxParamPropPageChild: OfxKeyword<'static> = OfxKeyword(b"OfxParamPropPageChild\0");
pub const kOfxParamPropParametricDimension: OfxKeyword<'static> = OfxKeyword(b"OfxParamPropParametricDimension\0");
pub const kOfxParamPropParametricInteractBackground: OfxKeyword<'static> = OfxKeyword(b"OfxParamPropParametricInteractBackground\0");
pub const kOfxParamPropParametricRange: OfxKeyword<'static> = OfxKeyword(b"OfxParamPropParametricRange\0");
pub const kOfxParamPropParametricUIColour: OfxKeyword<'static> = OfxKeyword(b"OfxParamPropParametricUIColour\0");
pub const kOfxParamPropParent: OfxKeyword<'static> = OfxKeyword(b"OfxParamPropParent\0");
pub const kOfxParamPropPersistant: OfxKeyword<'static> = OfxKeyword(b"OfxParamPropPersistant\0");
pub const kOfxParamPropPluginMayWrite: OfxKeyword<'static> = OfxKeyword(b"OfxParamPropPluginMayWrite\0");
pub const kOfxParamPropScriptName: OfxKeyword<'static> = OfxKeyword(b"OfxParamPropScriptName\0");
pub const kOfxParamPropSecret: OfxKeyword<'static> = OfxKeyword(b"OfxParamPropSecret\0");
pub const kOfxParamPropShowTimeMarker: OfxKeyword<'static> = OfxKeyword(b"OfxParamPropShowTimeMarker\0");
pub const kOfxParamPropStringFilePathExists: OfxKeyword<'static> = OfxKeyword(b"OfxParamPropStringFilePathExists\0");
pub const kOfxParamPropStringMode: OfxKeyword<'static> = OfxKeyword(b"OfxParamPropStringMode\0");
pub const kOfxParamPropType: OfxKeyword<'static> = OfxKeyword(b"OfxParamPropType\0");
pub const kOfxParamPropUseHostOverlayHandle: OfxKeyword<'static> = OfxKeyword(b"kOfxParamPropUseHostOverlayHandle\0");
pub const kOfxParamStringIsDirectoryPath: OfxKeyword<'static> = OfxKeyword(b"OfxParamStringIsDirectoryPath\0");
pub const kOfxParamStringIsFilePath: OfxKeyword<'static> = OfxKeyword(b"OfxParamStringIsFilePath\0");
pub const kOfxParamStringIsLabel: OfxKeyword<'static> = OfxKeyword(b"OfxParamStringIsLabel\0");
pub const kOfxParamStringIsMultiLine: OfxKeyword<'static> = OfxKeyword(b"OfxParamStringIsMultiLine\0");
pub const kOfxParamStringIsRichTextFormat: OfxKeyword<'static> = OfxKeyword(b"OfxParamStringIsRichTextFormat\0");
pub const kOfxParamStringIsSingleLine: OfxKeyword<'static> = OfxKeyword(b"OfxParamStringIsSingleLine\0");
pub const kOfxParamTypeBoolean: OfxKeyword<'static> = OfxKeyword(b"OfxParamTypeBoolean\0");
pub const kOfxParamTypeChoice: OfxKeyword<'static> = OfxKeyword(b"OfxParamTypeChoice\0");
pub const kOfxParamTypeCustom: OfxKeyword<'static> = OfxKeyword(b"OfxParamTypeCustom\0");
pub const kOfxParamTypeDouble2D: OfxKeyword<'static> = OfxKeyword(b"OfxParamTypeDouble2D\0");
pub const kOfxParamTypeDouble3D: OfxKeyword<'static> = OfxKeyword(b"OfxParamTypeDouble3D\0");
pub const kOfxParamTypeDouble: OfxKeyword<'static> = OfxKeyword(b"OfxParamTypeDouble\0");
pub const kOfxParamTypeGroup: OfxKeyword<'static> = OfxKeyword(b"OfxParamTypeGroup\0");
pub const kOfxParamTypeInteger2D: OfxKeyword<'static> = OfxKeyword(b"OfxParamTypeInteger2D\0");
pub const kOfxParamTypeInteger3D: OfxKeyword<'static> = OfxKeyword(b"OfxParamTypeInteger3D\0");
pub const kOfxParamTypeInteger: OfxKeyword<'static> = OfxKeyword(b"OfxParamTypeInteger\0");
pub const kOfxParamTypePage: OfxKeyword<'static> = OfxKeyword(b"OfxParamTypePage\0");
pub const kOfxParamTypeParametric: OfxKeyword<'static> = OfxKeyword(b"OfxParamTypeParametric\0");
pub const kOfxParamTypePushButton: OfxKeyword<'static> = OfxKeyword(b"OfxParamTypePushButton\0");
pub const kOfxParamTypeRGB: OfxKeyword<'static> = OfxKeyword(b"OfxParamTypeRGB\0");
pub const kOfxParamTypeRGBA: OfxKeyword<'static> = OfxKeyword(b"OfxParamTypeRGBA\0");
pub const kOfxParamTypeString: OfxKeyword<'static> = OfxKeyword(b"OfxParamTypeString\0");
pub const kOfxParameterSuite: OfxKeyword<'static> = OfxKeyword(b"OfxParameterSuite\0");
pub const kOfxParametricParameterSuite: OfxKeyword<'static> = OfxKeyword(b"OfxParametricParameterSuite\0");
pub const kOfxPluginPropFilePath: OfxKeyword<'static> = OfxKeyword(b"OfxPluginPropFilePath\0");
pub const kOfxPluginPropParamPageOrder: OfxKeyword<'static> = OfxKeyword(b"OfxPluginPropParamPageOrder\0");
pub const kOfxProgressSuite: OfxKeyword<'static> = OfxKeyword(b"OfxProgressSuite\0");
pub const kOfxPropAPIVersion: OfxKeyword<'static> = OfxKeyword(b"OfxPropAPIVersion\0");
pub const kOfxPropChangeReason: OfxKeyword<'static> = OfxKeyword(b"OfxPropChangeReason\0");
pub const kOfxPropEffectInstance: OfxKeyword<'static> = OfxKeyword(b"OfxPropEffectInstance\0");
pub const kOfxPropHostOSHandle: OfxKeyword<'static> = OfxKeyword(b"OfxPropHostOSHandle\0");
pub const kOfxPropIcon: OfxKeyword<'static> = OfxKeyword(b"OfxPropIcon\0");
pub const kOfxPropInstanceData: OfxKeyword<'static> = OfxKeyword(b"OfxPropInstanceData\0");
pub const kOfxPropIsInteractive: OfxKeyword<'static> = OfxKeyword(b"OfxPropIsInteractive\0");
pub const kOfxPropKeyString: OfxKeyword<'static> = OfxKeyword(b"kOfxPropKeyString\0");
pub const kOfxPropKeySym: OfxKeyword<'static> = OfxKeyword(b"kOfxPropKeySym\0");
pub const kOfxPropLabel: OfxKeyword<'static> = OfxKeyword(b"OfxPropLabel\0");
pub const kOfxPropLongLabel: OfxKeyword<'static> = OfxKeyword(b"OfxPropLongLabel\0");
pub const kOfxPropName: OfxKeyword<'static> = OfxKeyword(b"OfxPropName\0");
pub const kOfxPropParamSetNeedsSyncing: OfxKeyword<'static> = OfxKeyword(b"OfxPropParamSetNeedsSyncing\0");
pub const kOfxPropPluginDescription: OfxKeyword<'static> = OfxKeyword(b"OfxPropPluginDescription\0");
pub const kOfxPropShortLabel: OfxKeyword<'static> = OfxKeyword(b"OfxPropShortLabel\0");
pub const kOfxPropTime: OfxKeyword<'static> = OfxKeyword(b"OfxPropTime\0");
pub const kOfxPropType: OfxKeyword<'static> = OfxKeyword(b"OfxPropType\0");
pub const kOfxPropVersion: OfxKeyword<'static> = OfxKeyword(b"OfxPropVersion\0");
pub const kOfxPropVersionLabel: OfxKeyword<'static> = OfxKeyword(b"OfxPropVersionLabel\0");
pub const kOfxPropertySuite: OfxKeyword<'static> = OfxKeyword(b"OfxPropertySuite\0");
pub const kOfxStatErrBadHandle: OfxStatus = 9;
pub const kOfxStatErrBadIndex: OfxStatus = 10;
pub const kOfxStatErrExists: OfxStatus = 6;
pub const kOfxStatErrFatal: OfxStatus = 2;
pub const kOfxStatErrFormat: OfxStatus = 7;
pub const kOfxStatErrImageFormat: OfxStatus = 1000;
pub const kOfxStatErrMemory: OfxStatus = 8;
pub const kOfxStatErrMissingHostFeature: OfxStatus = 4;
pub const kOfxStatErrUnknown: OfxStatus = 3;
pub const kOfxStatErrUnsupported: OfxStatus = 5;
pub const kOfxStatErrValue: OfxStatus = 11;
pub const kOfxStatFailed: OfxStatus = 1;
pub const kOfxStatGLOutOfMemory: OfxStatus = 1001;
pub const kOfxStatGLRenderFailed: OfxStatus = 1002;
pub const kOfxStatOK: OfxStatus = 0;
pub const kOfxStatReplyDefault: OfxStatus = 14;
pub const kOfxStatReplyNo: OfxStatus = 13;
pub const kOfxStatReplyYes: OfxStatus = 12;
pub const kOfxTimeLineSuite: OfxKeyword<'static> = OfxKeyword(b"OfxTimeLineSuite\0");
pub const kOfxTypeClip: OfxKeyword<'static> = OfxKeyword(b"OfxTypeClip\0");
pub const kOfxTypeImage: OfxKeyword<'static> = OfxKeyword(b"OfxTypeImage\0");
pub const kOfxTypeImageEffect: OfxKeyword<'static> = OfxKeyword(b"OfxTypeImageEffect\0");
pub const kOfxTypeImageEffectHost: OfxKeyword<'static> = OfxKeyword(b"OfxTypeImageEffectHost\0");
pub const kOfxTypeImageEffectInstance: OfxKeyword<'static> = OfxKeyword(b"OfxTypeImageEffectInstance\0");
pub const kOfxTypeParameter: OfxKeyword<'static> = OfxKeyword(b"OfxTypeParameter\0");
pub const kOfxTypeParameterInstance: OfxKeyword<'static> = OfxKeyword(b"OfxTypeParameterInstance\0");
